extend _base

block content
    h1 Doodad.Button

    .example
        h2 Basic button
        script.example_code(type='text/coffeescript').
            doodads.push new Doodad.Button
                label: 'Do Something'
                action: (this_button) ->
                    @text('Something done!')

    .example
        h2 Bare button
        script.example_code(type='text/coffeescript').
            doodads.push new Doodad.Button
                label: 'Do Something'
                type: 'text-bare'
                action: (this_button) ->
                    @text('Something done!')


    .example
        h2 Classy buttons
        script.example_code(type='text/coffeescript').
            doodads.push ['dangerous', 'friendly', 'warning', 'action'].map (class_) ->
                return new Doodad.Button
                    type: 'text'
                    class: class_
                    label: "Do something \#{ class_ }"
                    action: (this_button) ->
                        @text("Something \#{ class_ } done!")

    .example
        h2 Classy, naked buttons
        script.example_code(type='text/coffeescript').
            doodads.push ['dangerous', 'friendly', 'warning', 'action'].map (class_) ->
                return new Doodad.Button
                    type: 'text-bare'
                    class: class_
                    label: "Do something \#{ class_ }"
                    action: (this_button) ->
                        @text("Something \#{ class_ } done!")

    .example
        h2 Iconic buttons
        script.example_code(type='text/coffeescript').
            doodads.push ['dangerous', 'friendly', 'warning', 'action', ''].map (class_) ->
                return new Doodad.Button
                    type: 'icon'
                    class: class_
                    label: "Do something \#{ class_ }"
                    action: (this_button) ->
                        @text("Something \#{ class_ } done!")

    .example
        h2 Iconic label buttons
        script.example_code(type='text/coffeescript').
            doodads.push ['dangerous', 'friendly', 'warning', 'action', ''].map (class_) ->
                return new Doodad.Button
                    type: 'icon+text'
                    class: class_
                    label: "Do something \#{ class_ }"
                    action: (this_button) ->
                        @text("Something \#{ class_ } done!")

    .example
        h2 Naken Icon buttons
        script.example_code(type='text/coffeescript').
            doodads.push ['dangerous', 'friendly', 'warning', 'action', ''].map (class_) ->
                return new Doodad.Button
                    type: 'icon-bare'
                    class: class_
                    label: "Do something \#{ class_ }"
                    action: (this_button) ->
                        @text("Something \#{ class_ } done!")

    .example
        h2 Dynamic label buttons
        script.example_code(type='text/coffeescript').
            doodads.push new Doodad.Button
                type: 'icon+text'
                label: "Do something"
                action: (this_button) ->
                    @text("Something done!")
                    this_button.setLabel('Do something again!')

    .example
        h2 Spinner buttons
        script.example_code(type='text/coffeescript').
            doodads.push ['icon', 'text', 'icon+text', 'icon-bare', 'text-bare'].map (type) ->
                return new Doodad.Button
                    type: type
                    label: "Do something"
                    spinner: true
                    action: (this_button) ->
                        @text("Doing something!")
                        setTimeout =>
                            this_button.enable()
                        , 2000


    script(type='text/coffeescript').
        window.instanceSetup = ($example_el, doodad_instance) ->
            # Patch the action to use the output element as `this`, and have
            # it reset after two seconds.
            old_action = doodad_instance._options.action
            doodad_instance._options.action = (inst) ->
                old_action.call($example_el.find('.output'), inst)
                clearTimeout(example_timeout)
                example_timeout = setTimeout ->
                    $example_el.find('.output').text('')
                , 2000
            console.log 'patched', doodad_instance
